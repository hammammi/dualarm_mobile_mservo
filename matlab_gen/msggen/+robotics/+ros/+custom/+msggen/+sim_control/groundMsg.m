classdef groundMsg < robotics.ros.Message
    %groundMsg MATLAB implementation of sim_control/groundMsg
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2020 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'sim_control/groundMsg' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '7c6e18303f17d89e676c20c86523844e' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        XGnd
        YGnd
        VxGnd
        VyGnd
        QxGnd
        QyGnd
        QzGnd
        QwGnd
    end
    
    properties (Constant, Hidden)
        PropertyList = {'QwGnd', 'QxGnd', 'QyGnd', 'QzGnd', 'VxGnd', 'VyGnd', 'XGnd', 'YGnd'} % List of non-constant message properties
        ROSPropertyList = {'qw_gnd', 'qx_gnd', 'qy_gnd', 'qz_gnd', 'vx_gnd', 'vy_gnd', 'x_gnd', 'y_gnd'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = groundMsg(msg)
            %groundMsg Construct the message object groundMsg
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function xgnd = get.XGnd(obj)
            %get.XGnd Get the value for property XGnd
            xgnd = double(obj.JavaMessage.getXGnd);
        end
        
        function set.XGnd(obj, xgnd)
            %set.XGnd Set the value for property XGnd
            validateattributes(xgnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'XGnd');
            
            obj.JavaMessage.setXGnd(xgnd);
        end
        
        function ygnd = get.YGnd(obj)
            %get.YGnd Get the value for property YGnd
            ygnd = double(obj.JavaMessage.getYGnd);
        end
        
        function set.YGnd(obj, ygnd)
            %set.YGnd Set the value for property YGnd
            validateattributes(ygnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'YGnd');
            
            obj.JavaMessage.setYGnd(ygnd);
        end
        
        function vxgnd = get.VxGnd(obj)
            %get.VxGnd Get the value for property VxGnd
            vxgnd = double(obj.JavaMessage.getVxGnd);
        end
        
        function set.VxGnd(obj, vxgnd)
            %set.VxGnd Set the value for property VxGnd
            validateattributes(vxgnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'VxGnd');
            
            obj.JavaMessage.setVxGnd(vxgnd);
        end
        
        function vygnd = get.VyGnd(obj)
            %get.VyGnd Get the value for property VyGnd
            vygnd = double(obj.JavaMessage.getVyGnd);
        end
        
        function set.VyGnd(obj, vygnd)
            %set.VyGnd Set the value for property VyGnd
            validateattributes(vygnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'VyGnd');
            
            obj.JavaMessage.setVyGnd(vygnd);
        end
        
        function qxgnd = get.QxGnd(obj)
            %get.QxGnd Get the value for property QxGnd
            qxgnd = double(obj.JavaMessage.getQxGnd);
        end
        
        function set.QxGnd(obj, qxgnd)
            %set.QxGnd Set the value for property QxGnd
            validateattributes(qxgnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'QxGnd');
            
            obj.JavaMessage.setQxGnd(qxgnd);
        end
        
        function qygnd = get.QyGnd(obj)
            %get.QyGnd Get the value for property QyGnd
            qygnd = double(obj.JavaMessage.getQyGnd);
        end
        
        function set.QyGnd(obj, qygnd)
            %set.QyGnd Set the value for property QyGnd
            validateattributes(qygnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'QyGnd');
            
            obj.JavaMessage.setQyGnd(qygnd);
        end
        
        function qzgnd = get.QzGnd(obj)
            %get.QzGnd Get the value for property QzGnd
            qzgnd = double(obj.JavaMessage.getQzGnd);
        end
        
        function set.QzGnd(obj, qzgnd)
            %set.QzGnd Set the value for property QzGnd
            validateattributes(qzgnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'QzGnd');
            
            obj.JavaMessage.setQzGnd(qzgnd);
        end
        
        function qwgnd = get.QwGnd(obj)
            %get.QwGnd Get the value for property QwGnd
            qwgnd = double(obj.JavaMessage.getQwGnd);
        end
        
        function set.QwGnd(obj, qwgnd)
            %set.QwGnd Set the value for property QwGnd
            validateattributes(qwgnd, {'numeric'}, {'nonempty', 'scalar'}, 'groundMsg', 'QwGnd');
            
            obj.JavaMessage.setQwGnd(qwgnd);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.XGnd = obj.XGnd;
            cpObj.YGnd = obj.YGnd;
            cpObj.VxGnd = obj.VxGnd;
            cpObj.VyGnd = obj.VyGnd;
            cpObj.QxGnd = obj.QxGnd;
            cpObj.QyGnd = obj.QyGnd;
            cpObj.QzGnd = obj.QzGnd;
            cpObj.QwGnd = obj.QwGnd;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.XGnd = strObj.XGnd;
            obj.YGnd = strObj.YGnd;
            obj.VxGnd = strObj.VxGnd;
            obj.VyGnd = strObj.VyGnd;
            obj.QxGnd = strObj.QxGnd;
            obj.QyGnd = strObj.QyGnd;
            obj.QzGnd = strObj.QzGnd;
            obj.QwGnd = strObj.QwGnd;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.XGnd = obj.XGnd;
            strObj.YGnd = obj.YGnd;
            strObj.VxGnd = obj.VxGnd;
            strObj.VyGnd = obj.VyGnd;
            strObj.QxGnd = obj.QxGnd;
            strObj.QyGnd = obj.QyGnd;
            strObj.QzGnd = obj.QzGnd;
            strObj.QwGnd = obj.QwGnd;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.sim_control.groundMsg.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.sim_control.groundMsg;
            obj.reload(strObj);
        end
    end
end
